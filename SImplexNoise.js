const t=.5*(Math.sqrt(3)-1),
e=(3-Math.sqrt(3))/6,o=1/3,n=1/6,
r=(Math.sqrt(5)-1)/4,
s=(5-Math.sqrt(5))/20,
l=new Float32Array([1,1,0,-1,1,0,1,-1,0,-1,-1,0,1,0,1,-1,0,1,1,0,-1,-1,0,-1,0,1,1,0,-1,1,0,1,-1,0,-1,-1]),
c=new Float32Array([0,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,1,0,1,1,1,0,1,-1,1,0,-1,1,1,0,-1,-1,-1,0,1,1,-1,0,1,-1,-1,0,-1,1,-1,0,-1,-1,1,1,0,1,1,1,0,-1,1,-1,0,1,1,-1,0,-1,-1,1,0,1,-1,1,0,-1,-1,-1,0,1,-1,-1,0,-1,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,0]);
class i{constructor(t=Math.random){const e="function"==typeof t?t:function(t){let e=0,o=0,n=0,r=1;const s=function(){let t=4022871197;return function(e){e=e.toString();for(let o=0;o<e.length;o++){t+=e.charCodeAt(o);let n=.02519603282416938*t;t=n>>>0,n-=t,n*=t,t=n>>>0,n-=t,t+=4294967296*n}return 2.3283064365386963e-10*(t>>>0)}}();e=s(" "),o=s(" "),n=s(" "),e-=s(t),e<0&&(e+=1);o-=s(t),o<0&&(o+=1);n-=s(t),n<0&&(n+=1);return function(){const t=2091639*e+2.3283064365386963e-10*r;return e=o,o=n,n=t-(r=0|t)}}(t);this.p=f(e),this.perm=new Uint8Array(512),this.permMod12=new Uint8Array(512);for(let t=0;t<512;t++)this.perm[t]=this.p[255&t],this.permMod12[t]=this.perm[t]%12}noise2D(o,n){const r=this.permMod12,s=this.perm;let c=0,i=0,f=0;const h=(o+n)*t,a=Math.floor(o+h),M=Math.floor(n+h),u=(a+M)*e,p=o-(a-u),m=n-(M-u);let d,y;p>m?(d=1,y=0):(d=0,y=1);const A=p-d+e,w=m-y+e,q=p-1+2*e,D=m-1+2*e,U=255&a,g=255&M;let F=.5-p*p-m*m;if(F>=0){const t=3*r[U+s[g]];F*=F,c=F*F*(l[t]*p+l[t+1]*m)}let x=.5-A*A-w*w;if(x>=0){const t=3*r[U+d+s[g+y]];x*=x,i=x*x*(l[t]*A+l[t+1]*w)}let C=.5-q*q-D*D;if(C>=0){const t=3*r[U+1+s[g+1]];C*=C,f=C*C*(l[t]*q+l[t+1]*D)}return 70*(c+i+f)}noise3D(t,e,r){const s=this.permMod12,c=this.perm;let i,f,h,a;const M=(t+e+r)*o,u=Math.floor(t+M),p=Math.floor(e+M),m=Math.floor(r+M),d=(u+p+m)*n,y=t-(u-d),A=e-(p-d),w=r-(m-d);let q,D,U,g,F,x;y>=A?A>=w?(q=1,D=0,U=0,g=1,F=1,x=0):y>=w?(q=1,D=0,U=0,g=1,F=0,x=1):(q=0,D=0,U=1,g=1,F=0,x=1):A<w?(q=0,D=0,U=1,g=0,F=1,x=1):y<w?(q=0,D=1,U=0,g=0,F=1,x=1):(q=0,D=1,U=0,g=1,F=1,x=0);const C=y-q+n,S=A-D+n,b=w-U+n,j=y-g+2*n,k=A-F+2*n,v=w-x+2*n,z=y-1+.5,B=A-1+.5,E=w-1+.5,G=255&u,H=255&p,I=255&m;let J=.6-y*y-A*A-w*w;if(J<0)i=0;else{const t=3*s[G+c[H+c[I]]];J*=J,i=J*J*(l[t]*y+l[t+1]*A+l[t+2]*w)}let K=.6-C*C-S*S-b*b;if(K<0)f=0;else{const t=3*s[G+q+c[H+D+c[I+U]]];K*=K,f=K*K*(l[t]*C+l[t+1]*S+l[t+2]*b)}let L=.6-j*j-k*k-v*v;if(L<0)h=0;else{const t=3*s[G+g+c[H+F+c[I+x]]];L*=L,h=L*L*(l[t]*j+l[t+1]*k+l[t+2]*v)}let N=.6-z*z-B*B-E*E;if(N<0)a=0;else{const t=3*s[G+1+c[H+1+c[I+1]]];N*=N,a=N*N*(l[t]*z+l[t+1]*B+l[t+2]*E)}return 32*(i+f+h+a)}noise4D(t,e,o,n){const l=this.perm;let i,f,h,a,M;const u=(t+e+o+n)*r,p=Math.floor(t+u),m=Math.floor(e+u),d=Math.floor(o+u),y=Math.floor(n+u),A=(p+m+d+y)*s,w=t-(p-A),q=e-(m-A),D=o-(d-A),U=n-(y-A);let g=0,F=0,x=0,C=0;w>q?g++:F++,w>D?g++:x++,w>U?g++:C++,q>D?F++:x++,q>U?F++:C++,D>U?x++:C++;const S=g>=3?1:0,b=F>=3?1:0,j=x>=3?1:0,k=C>=3?1:0,v=g>=2?1:0,z=F>=2?1:0,B=x>=2?1:0,E=C>=2?1:0,G=g>=1?1:0,H=F>=1?1:0,I=x>=1?1:0,J=C>=1?1:0,K=w-S+s,L=q-b+s,N=D-j+s,O=U-k+s,P=w-v+2*s,Q=q-z+2*s,R=D-B+2*s,T=U-E+2*s,V=w-G+3*s,W=q-H+3*s,X=D-I+3*s,Y=U-J+3*s,Z=w-1+4*s,$=q-1+4*s,_=D-1+4*s,tt=U-1+4*s,et=255&p,ot=255&m,nt=255&d,rt=255&y;let st=.6-w*w-q*q-D*D-U*U;if(st<0)i=0;else{const t=l[et+l[ot+l[nt+l[rt]]]]%32*4;st*=st,i=st*st*(c[t]*w+c[t+1]*q+c[t+2]*D+c[t+3]*U)}let lt=.6-K*K-L*L-N*N-O*O;if(lt<0)f=0;else{const t=l[et+S+l[ot+b+l[nt+j+l[rt+k]]]]%32*4;lt*=lt,f=lt*lt*(c[t]*K+c[t+1]*L+c[t+2]*N+c[t+3]*O)}let ct=.6-P*P-Q*Q-R*R-T*T;if(ct<0)h=0;else{const t=l[et+v+l[ot+z+l[nt+B+l[rt+E]]]]%32*4;ct*=ct,h=ct*ct*(c[t]*P+c[t+1]*Q+c[t+2]*R+c[t+3]*T)}let it=.6-V*V-W*W-X*X-Y*Y;if(it<0)a=0;else{const t=l[et+G+l[ot+H+l[nt+I+l[rt+J]]]]%32*4;it*=it,a=it*it*(c[t]*V+c[t+1]*W+c[t+2]*X+c[t+3]*Y)}let ft=.6-Z*Z-$*$-_*_-tt*tt;if(ft<0)M=0;else{const t=l[et+1+l[ot+1+l[nt+1+l[rt+1]]]]%32*4;ft*=ft,M=ft*ft*(c[t]*Z+c[t+1]*$+c[t+2]*_+c[t+3]*tt)}return 27*(i+f+h+a+M)}}function f(t){const e=new Uint8Array(256);for(let t=0;t<256;t++)e[t]=t;for(let o=0;o<255;o++){const n=o+~~(t()*(256-o)),r=e[o];e[o]=e[n],e[n]=r}return e}export{i as SimplexNoise,f as buildPermutationTable,i as default};
//# sourceMappingURL=/sm/17d6f6f6a0fcf93e8f6fa7cf23267f0771b6f404b5a81a75f4eb0eb68cd5bd7c.map